/*
 * Copyright 2019 ConsenSys AG.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations under the License.
 */

package tech.pegasys.artemis.datastructures.operations;

import static java.util.stream.Collectors.toList;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.security.Security;
import java.util.Arrays;
import java.util.List;
import org.apache.tuweni.bytes.Bytes;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.junit.jupiter.api.Test;
import tech.pegasys.artemis.util.bls.BLSKeyPair;
import tech.pegasys.artemis.util.mikuli.KeyPair;
import tech.pegasys.artemis.util.mikuli.SecretKey;

class MockStartDepositGeneratorTest {

  private static final String[] PRIVATE_KEYS = {
    "0x0000000000000000000000000000000025295F0D1D592A90B333E26E85149708208E9F8E8BC18F6C77BD62F8AD7A6866",
    "0x0000000000000000000000000000000051D0B65185DB6989AB0B560D6DEED19C7EAD0E24B9B6372CBECB1F26BDFAD000",
    "0x00000000000000000000000000000000315ED405FAFE339603932EEBE8DBFD650CE5DAFA561F6928664C75DB85F97857",
    "0x0000000000000000000000000000000025B1166A43C109CB330AF8945D364722757C65ED2BFED5444B5A2F057F82D391",
    "0x000000000000000000000000000000003F5615898238C4C4F906B507EE917E9EA1BB69B93F1DBD11A34D229C3B06784B",
    "0x00000000000000000000000000000000055794614BC85ED5436C1F5CAB586AAB6CA84835788621091F4F3B813761E7A8",
    "0x000000000000000000000000000000001023C68852075965E0F7352DEE3F76A84A83E7582C181C10179936C6D6348893",
    "0x000000000000000000000000000000003A941600DC41E5D20E818473B817A28507C23CDFDB4B659C15461EE5C71E41F5",
    "0x00000000000000000000000000000000066E3BDC0415530E5C7FED6382D5C822C192B620203CF669903E1810A8C67D06",
    "0x000000000000000000000000000000002B3B88A041168A1C4CD04BDD8DE7964FD35238F95442DC678514F9DADB81EC34"
  };

  private static final String[] EXPECTED_DEPOSITS = {
    "0x30000000A99A76ED7796F7BE22D5B7E85DEEB7C5677E88E511E0B337618F8C4EB61349B4BF2D153F649F7B53359FE8B94A38E44C819DF2E2EBD5D5EBC4C6CEF89BEE529825E30D8B9154F9BAB5E3DFDBDDFE1BA900405973070000006000000089F5EF91FF7A1127ECD935B1EC8739AB8596FE4ED675E00BED87497F1F901C1D78982ABEA4E98A81332DE4F17836DF0A1614AFB0CC75B9D9688E5F839ADEB2FC861C0D794CD299C70C157480607110023F758056F3FFA3BDFFEF919D97160D2C",
    "0x30000000B89BEBC699769726A318C8E9971BD3171297C61AEA4A6578A7A4F94B547DCBA5BAC16A89108B6B6A1FE3695D1A874A0BF78E608CED245D43B844902D24A80B8C3E5162D9B2225D25EAEAD7445FD432310040597307000000600000008BBA864D0D370E0FE3834843540F1CA76DF0356714586BA3098B4A32EABBBDF57A53FD6E1459AB15FB82EEEC748E152708932AC49DB8838C1F8B971F9AA9E8136F75314D6AF5457AB6C8102EB97B93BCE6879363B27C9135993014E86371D5FE",
    "0x30000000A3A32B0F8B4DDB83F1A0A853D81DD725DFE577D4F4C3DB8ECE52CE2B026ECA84815C1A7E8E92A4DE3D755733BF7E4A9B2A0FD3C1D49F800BEB6B400683E63D45FB51291DA1DD87B167C214548D43C3E4004059730700000060000000B6FCCBA3808B930B6D478B2C82BEEA4E7F08FF8C3292273F843A52AA4B40B65CC63447894CA21379D6B3EEB92C7C06F40B74B442F02AA5EB73609506B197DF492A2F26C557A8DD9040DFF3FA5DB2E536BDB7A9AE9372BF3F4BC4BB13A6EBB3A3",
    "0x3000000088C141DF77CD9D8D7A71A75C826C41A9C9F03C6EE1B180F3E7852F6A280099DED351B58D66E653AF8E42816A4D8F532E558C8C7A9302A38EE6293C8ABE53BEFD09B400487472172A5E3F4DA1AFA9133D004059730700000060000000A0A6AAB2C46FC5923126E6549CC350415314183DCE600B83B88C48582C8C4CE388A33532057FBD78DED2DFD34D747AF40CDEADE3A58C9E58A2BD9C1B67A46803562457065E183F883B3FB3BC6529320544CD85CAB13213A1457543C595300017",
    "0x3000000081283B7A20E1CA460EBD9BBD77005D557370CABB1F9A44F530C4C4C66230F675F8DF8B4C2818851AA7D77A80CA5A4A5E70C80C1A0BDB28004A12A2440E5105AD5A695F415857D193C0B984C530E15191004059730700000060000000AA1B2EF51487335D06532E57767F2FBBA68D2931DE5AC0E17DD7F0B567242FCEDB851BC0C264DA46AFDF81C97945451D0F91F700DDB2DAC89787BEF89D5CFE001BD6FFA97436870448EF409D7BCFE5D06D2842A32A0D71FE3E2BFC246018D227",
    "0x30000000AB0BDDA0F85F842F431BEACCF1250BF1FD7BA51B4100FD64364B6401FDA85BB0069B3E715B58819684E7FC0B10A72A3433633D0555655946B09707BB9F1EB11CE42268EB750C99CC77CD32A428895011004059730700000060000000971F630BFAF5ACC0A8F58D9FDACAE72805962D54684BB3533AF7893E2DCD1415999810B4573D91A4A267F56147071A7A1427C0BE12986CFD63C5BBBB3D0F5D130912D5304A95ED5D43B7B13F82E48C927887B589C8323F78BAD4AA3237140367",
    "0x300000009977F1C8B731A8D5558146BFB86CAEA26434F3C5878B589BF280A42C9159E700E9DF0E4086296C20B011D2E78C27D373C1EF7DF0A970448DE24BF841919599819EB63A99DF28C9C3A4DB0C6BA0AEBF6B004059730700000060000000A274F921E149B68675F60FF6D7EA06C87B1A2528FD543B475FBF09932483CC2A0C22C7BC3C208538CD6D42E152DBE17A0ED728594E89F158040555B3B7AD507A83DDA1A11EA424F0BC649944AA15FEDCADFAB87C5D4296F69CDCC34385C6B5C6",
    "0x30000000A8D4C7C27795A725961317EF5953A7032ED6D83739DB8B0E8A72353D1B8B4439427F7EFA2C89CAA03CC9F28F8CBAB8ACE598ACC5F8BE770A828F9C67F198EB10A9546EEAC3FC86AE9F14DCEEEE226001004059730700000060000000A2A40816B683191382AD4688E33CD22DCAE0C0751659A86BBDA9319FB2CDB6250BB5F12131F9345F3FCB8621744808D90A4A66BE70E2C0AB3BFBA3302C6831CB761DE6477D38D191C618DA992CAF22691DABD9C9468D485B5917AAA67DF9567E",
    "0x30000000A6D310DBBFAB9A22450F59993F87A4CE5DB6223F3B5F1F30D2C4EC718922D400E0B3C7741DE8E59960F72411A0EE10A71CDDC24E2F39390D8A2C6F86B020ACEB7AE012CC33EB2274DCF63E8DD77D85F1004059730700000060000000AD3CA281D517FFCB9CB2B705821A8AE1CE580BEC0288ADC7DE6B42A0B19551485D67109CC1DC6C7009E9C745B82AA69F0C1FAF0383B216AECE0E83A4F1D9688516E5786653A3936FB69417E004789DA79939BE2FA1BD72BC66E07799552CF294",
    "0x300000009893413C00283A3F9ED9FD9845DDA1CEA38228D22567F9541DCCC357E54A2D6A6E204103C92564CBC05F4905AC7C493ABDC040F68BADC4DE5C22E18551F77F67DDD0731C4C8882B10D1967A4CFB04850004059730700000060000000A0B8D3415BE8EDE0EE8FFDC5C958B7454877E010E9B54DB4DD63F3FCDB83A4A537BFBE7AD65E360DFC1C1A0A6268ADA911825B788F36392D79E91F4A661A87B6DEFD8AEC8EBA50801A83FAA6FC844CDE788BAFABA2E2BBE47A953023DC03D491"
  };

  private final MockStartDepositGenerator generator = new MockStartDepositGenerator();

  static {
    Security.addProvider(new BouncyCastleProvider());
  }

  @Test
  public void shouldGenerateDepositData() {
    final List<BLSKeyPair> keyPairs =
        Arrays.stream(PRIVATE_KEYS)
            .map(Bytes::fromHexString)
            .map(SecretKey::fromBytes)
            .map(KeyPair::new)
            .map(BLSKeyPair::new)
            .collect(toList());

    final List<DepositData> expectedDeposits =
        Arrays.stream(EXPECTED_DEPOSITS)
            .map(Bytes::fromHexString)
            .map(DepositData::fromBytes)
            .collect(toList());

    final List<DepositData> actualDeposits = generator.createDeposits(keyPairs);
    assertEquals(expectedDeposits, actualDeposits);
  }
}

package net.consensys.beaconchain.state;

import static org.assertj.core.api.Assertions.assertThat;

import net.consensys.beaconchain.ethereum.core.Hash;
import net.consensys.beaconchain.util.bytes.Bytes3;
import net.consensys.beaconchain.util.bytes.BytesValue;
import org.junit.Test;

public class BeaconStateTest {

  @Test
  public void failsWhenInvalidArgumentFromBytes3() {}

  @Test
  public void failsWhenInvalidArgumentsToBytes3() {}

  @Test
  public void convertIntToBytes3() {
    Bytes3 expected = Bytes3.wrap(new byte[]{(byte) 1, (byte) 256, (byte) 65656});
    Bytes3 actual = BeaconState.BeaconStateHelperFunctions.intToBytes3(65656);

    assertThat(actual).isEqualTo(expected);
  }

  @Test
  public void convertBytes3ToInt() {
    BytesValue bytes = BytesValue.wrap(new byte[]{(byte) 1, (byte) 256, (byte) 65656});
    Hash src = Hash.hash(bytes);
    int pos = 0;
    int expected = 65656;
    int actual = BeaconState.BeaconStateHelperFunctions.bytes3ToInt(src, pos);
    assertThat(actual).isEqualTo(expected);
  }

}
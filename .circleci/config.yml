version: 2.1
executors:
  medium_executor:
    docker:
      - image: circleci/openjdk:11.0.4-jdk-stretch
    resource_class: medium
    working_directory: ~/project
    environment:
      JAVA_TOOL_OPTIONS: -Xmx2g
      _JAVA_OPTIONS: -Xmx2g
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=2

commands:
  prepare:
    description: "Prepare"
    steps:
      - checkout
      - restore_cache:
          name: Restore cached gradle dependencies
          keys:
            - deps-{{ checksum "build.gradle" }}-{{ .Branch }}-{{ .Revision }}
            - deps-{{ checksum "build.gradle" }}
            - deps-
  capture_test_results:
    description: "Capture test results"
    steps:
      - run:
          name: "Gather test results"
          command: |
            FILES=`find . -name test-results`
            for FILE in $FILES
            do
              MODULE=`echo "$FILE" | sed -e 's@./\(.*\)/build/test-results@\1@'`
              TARGET="build/test-results/$MODULE"
              mkdir -p "$TARGET"
              cp -rf ${FILE}/test/* "build/test-results/$MODULE"
            done
      - store_test_results:
          path: build/test-results

jobs:
  assemble:
    executor: medium_executor
    steps:
      - prepare
      - run:
          name: Assemble
          command: |
            ./gradlew --no-daemon --parallel clean compileJava compileTestJava assemble
      - save_cache:
          name: Caching gradle dependencies
          key: deps-{{ checksum "build.gradle" }}-{{ .Branch }}-{{ .Revision }}
          paths:
            - .gradle
            - ~/.gradle
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./

  unitTests:
    executor: medium_executor
    steps:
      - prepare
      - attach_workspace:
          at: ~/project
      - run:
          name: UnitTests
          no_output_timeout: 20m
          command: |
            ./gradlew --no-daemon --parallel test -x :eth-reference-tests:test
      - capture_test_results


  referenceTests:
    executor: medium_executor
    steps:
      - prepare
      - attach_workspace:
          at: ~/project
      - run:
          name: FetchReferenceTests
          command: |
            ./scripts/get-ref-tests.sh
      - run:
          name: ReferenceTests
          // TODO: Skip non-reference tests here
          command: |
            ./gradlew --no-daemon --parallel test
      - capture_test_results

  javadoc:
    executor: medium_executor
    steps:
      - prepare
      - attach_workspace:
          at: ~/project
      - run:
          name: JavaDoc
          no_output_timeout: 20m
          command: |
            ./gradlew --no-daemon --parallel javadoc

  docker:
    executor: medium_executor
    steps:
      - prepare
      - attach_workspace:
          at: ~/project
      - setup_remote_docker
      - run:
          name: Docker
          command: |
            ./gradlew --no-daemon --parallel distDocker

      - run:
          name: DockerWhiteblock
          command: |
            ./gradlew --no-daemon --parallel distDockerWhiteblock

  publish:
    executor: medium_executor
    steps:
      - prepare
      - attach_workspace:
          at: ~/project
      - run:
          name: Publish
          command: |
            echo "Not really publishing at this stage."

workflows:
  version: 2
  default:
    jobs:
      - assemble
      - unitTests:
          requires:
            - assemble
      - referenceTests:
          requires:
            - assemble
      - docker:
          requires:
            - assemble
            - unitTests
#      - javadoc:
#          requires:
#            - assemble
      - publish:
          requires:
            - unitTests
            - referenceTests
            - docker
#            - javadoc
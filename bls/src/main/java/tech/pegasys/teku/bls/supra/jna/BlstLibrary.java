package tech.pegasys.teku.bls.supra.jna;

import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.Structure;
import com.sun.jna.Structure.FieldOrder;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.LongByReference;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.IntBuffer;
import java.nio.LongBuffer;
/**
 * JNA Wrapper for library <b>test</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface BlstLibrary extends Library {
  static ByteOrder BYTE_ORDER = ByteOrder.LITTLE_ENDIAN;

  public static final BlstLibrary INSTANCE = (BlstLibrary) Native.loadLibrary("blst", BlstLibrary.class);

  //  bool blst_p1_on_curve(const blst_p1 *p);
  //  bool blst_p2_on_curve(const blst_p2 *p);
  boolean blst_p1_on_curve(blst_p1 p);
  boolean blst_p2_on_curve(blst_p2 p);

  /**
   * Original signature : <code>void blst_scalar_from_uint32(blst_scalar*, const uint32_t[8])</code><br>
   * <i>native declaration : line 60</i><br>
   * @deprecated use the safer methods {@link #blst_scalar_from_uint32(test.TestLibrary.blst_scalar, int[])} and {@link #blst_scalar_from_uint32(test.TestLibrary.blst_scalar, com.sun.jna.ptr.IntByReference)} instead
   */
  @Deprecated
  void blst_scalar_from_uint32(BlstLibrary.blst_scalar ret, IntByReference a);
  /**
   * Original signature : <code>void blst_scalar_from_uint32(blst_scalar*, const uint32_t[8])</code><br>
   * <i>native declaration : line 60</i>
   */
  void blst_scalar_from_uint32(BlstLibrary.blst_scalar ret, int a[]);

  /**
   * Original signature : <code>void blst_uint32_from_scalar(uint32_t[8], const blst_scalar*)</code><br>
   * <i>native declaration : line 61</i><br>
   * @deprecated use the safer methods {@link #blst_uint32_from_scalar(java.nio.IntBuffer, test.TestLibrary.blst_scalar[])} and {@link #blst_uint32_from_scalar(com.sun.jna.ptr.IntByReference, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_uint32_from_scalar(IntByReference ret, BlstLibrary.blst_scalar a);
  /**
   * Original signature : <code>void blst_uint32_from_scalar(uint32_t[8], const blst_scalar*)</code><br>
   * <i>native declaration : line 61</i>
   */
  void blst_uint32_from_scalar(IntBuffer ret, BlstLibrary.blst_scalar a[]);
  /**
   * Original signature : <code>void blst_scalar_from_uint64(blst_scalar*, const uint64_t[4])</code><br>
   * <i>native declaration : line 62</i><br>
   * @deprecated use the safer methods {@link #blst_scalar_from_uint64(test.TestLibrary.blst_scalar, long[])} and {@link #blst_scalar_from_uint64(test.TestLibrary.blst_scalar, com.sun.jna.ptr.LongByReference)} instead
   */
  @Deprecated
  void blst_scalar_from_uint64(BlstLibrary.blst_scalar ret, LongByReference a);
  /**
   * Original signature : <code>void blst_scalar_from_uint64(blst_scalar*, const uint64_t[4])</code><br>
   * <i>native declaration : line 62</i>
   */
  void blst_scalar_from_uint64(BlstLibrary.blst_scalar ret, long a[]);
  /**
   * Original signature : <code>void blst_uint64_from_scalar(uint64_t[4], const blst_scalar*)</code><br>
   * <i>native declaration : line 63</i><br>
   * @deprecated use the safer methods {@link #blst_uint64_from_scalar(java.nio.LongBuffer, test.TestLibrary.blst_scalar[])} and {@link #blst_uint64_from_scalar(com.sun.jna.ptr.LongByReference, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_uint64_from_scalar(LongByReference ret, BlstLibrary.blst_scalar a);
  /**
   * Original signature : <code>void blst_uint64_from_scalar(uint64_t[4], const blst_scalar*)</code><br>
   * <i>native declaration : line 63</i>
   */
  void blst_uint64_from_scalar(LongBuffer ret, BlstLibrary.blst_scalar a[]);
  /**
   * Original signature : <code>void blst_scalar_from_bendian(blst_scalar*, const byte[32])</code><br>
   * <i>native declaration : line 64</i><br>
   * @deprecated use the safer methods {@link #blst_scalar_from_bendian(test.TestLibrary.blst_scalar, byte[])} and {@link #blst_scalar_from_bendian(test.TestLibrary.blst_scalar, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  void blst_scalar_from_bendian(BlstLibrary.blst_scalar ret, Pointer a);
  /**
   * Original signature : <code>void blst_scalar_from_bendian(blst_scalar*, const byte[32])</code><br>
   * <i>native declaration : line 64</i>
   */
  void blst_scalar_from_bendian(BlstLibrary.blst_scalar ret, byte a[]);
  /**
   * Original signature : <code>void blst_bendian_from_scalar(byte[32], const blst_scalar*)</code><br>
   * <i>native declaration : line 65</i><br>
   * @deprecated use the safer methods {@link #blst_bendian_from_scalar(java.nio.ByteBuffer, test.TestLibrary.blst_scalar[])} and {@link #blst_bendian_from_scalar(com.sun.jna.Pointer, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_bendian_from_scalar(Pointer ret, BlstLibrary.blst_scalar a);
  /**
   * Original signature : <code>void blst_bendian_from_scalar(byte[32], const blst_scalar*)</code><br>
   * <i>native declaration : line 65</i>
   */
  void blst_bendian_from_scalar(ByteBuffer ret, BlstLibrary.blst_scalar a[]);
  /**
   * Original signature : <code>void blst_scalar_from_lendian(blst_scalar*, const byte[32])</code><br>
   * <i>native declaration : line 66</i><br>
   * @deprecated use the safer methods {@link #blst_scalar_from_lendian(test.TestLibrary.blst_scalar, byte[])} and {@link #blst_scalar_from_lendian(test.TestLibrary.blst_scalar, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  void blst_scalar_from_lendian(BlstLibrary.blst_scalar ret, Pointer a);
  /**
   * Original signature : <code>void blst_scalar_from_lendian(blst_scalar*, const byte[32])</code><br>
   * <i>native declaration : line 66</i>
   */
  void blst_scalar_from_lendian(BlstLibrary.blst_scalar ret, byte a[]);
  /**
   * Original signature : <code>void blst_lendian_from_scalar(byte[32], const blst_scalar*)</code><br>
   * <i>native declaration : line 67</i><br>
   * @deprecated use the safer methods {@link #blst_lendian_from_scalar(java.nio.ByteBuffer, test.TestLibrary.blst_scalar[])} and {@link #blst_lendian_from_scalar(com.sun.jna.Pointer, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_lendian_from_scalar(Pointer ret, BlstLibrary.blst_scalar a);
  /**
   * Original signature : <code>void blst_lendian_from_scalar(byte[32], const blst_scalar*)</code><br>
   * <i>native declaration : line 67</i>
   */
  void blst_lendian_from_scalar(ByteBuffer ret, BlstLibrary.blst_scalar a[]);
  /**
   * Original signature : <code>bool blst_scalar_fr_check(const blst_scalar*)</code><br>
   * <i>native declaration : line 68</i><br>
   * @deprecated use the safer methods {@link #blst_scalar_fr_check(test.TestLibrary.blst_scalar[])} and {@link #blst_scalar_fr_check(test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  byte blst_scalar_fr_check(BlstLibrary.blst_scalar a);
  /**
   * Original signature : <code>bool blst_scalar_fr_check(const blst_scalar*)</code><br>
   * <i>native declaration : line 68</i>
   */
  byte blst_scalar_fr_check(BlstLibrary.blst_scalar a[]);
  /**
   * BLS12-381-specifc Fr operations.<br>
   * Original signature : <code>void blst_fr_add(blst_fr*, const blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 73</i><br>
   * @deprecated use the safer methods {@link #blst_fr_add(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[], test.TestLibrary.blst_fr[])} and {@link #blst_fr_add(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_add(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a, BlstLibrary.blst_fr b);
  /**
   * BLS12-381-specifc Fr operations.<br>
   * Original signature : <code>void blst_fr_add(blst_fr*, const blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 73</i>
   */
  void blst_fr_add(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[], BlstLibrary.blst_fr b[]);
  /**
   * Original signature : <code>void blst_fr_sub(blst_fr*, const blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 74</i><br>
   * @deprecated use the safer methods {@link #blst_fr_sub(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[], test.TestLibrary.blst_fr[])} and {@link #blst_fr_sub(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_sub(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a, BlstLibrary.blst_fr b);
  /**
   * Original signature : <code>void blst_fr_sub(blst_fr*, const blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 74</i>
   */
  void blst_fr_sub(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[], BlstLibrary.blst_fr b[]);
  /**
   * Original signature : <code>void blst_fr_mul_by_3(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 75</i><br>
   * @deprecated use the safer methods {@link #blst_fr_mul_by_3(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[])} and {@link #blst_fr_mul_by_3(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_mul_by_3(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a);
  /**
   * Original signature : <code>void blst_fr_mul_by_3(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 75</i>
   */
  void blst_fr_mul_by_3(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[]);
  /**
   * Original signature : <code>void blst_fr_lshift(blst_fr*, const blst_fr*, size_t)</code><br>
   * <i>native declaration : line 76</i><br>
   * @deprecated use the safer methods {@link #blst_fr_lshift(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fr_lshift(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fr_lshift(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a, NativeSize count);
  /**
   * Original signature : <code>void blst_fr_lshift(blst_fr*, const blst_fr*, size_t)</code><br>
   * <i>native declaration : line 76</i>
   */
  void blst_fr_lshift(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[], NativeSize count);
  /**
   * Original signature : <code>void blst_fr_rshift(blst_fr*, const blst_fr*, size_t)</code><br>
   * <i>native declaration : line 77</i><br>
   * @deprecated use the safer methods {@link #blst_fr_rshift(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fr_rshift(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fr_rshift(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a, NativeSize count);
  /**
   * Original signature : <code>void blst_fr_rshift(blst_fr*, const blst_fr*, size_t)</code><br>
   * <i>native declaration : line 77</i>
   */
  void blst_fr_rshift(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[], NativeSize count);
  /**
   * Original signature : <code>void blst_fr_mul(blst_fr*, const blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 78</i><br>
   * @deprecated use the safer methods {@link #blst_fr_mul(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[], test.TestLibrary.blst_fr[])} and {@link #blst_fr_mul(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_mul(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a, BlstLibrary.blst_fr b);
  /**
   * Original signature : <code>void blst_fr_mul(blst_fr*, const blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 78</i>
   */
  void blst_fr_mul(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[], BlstLibrary.blst_fr b[]);
  /**
   * Original signature : <code>void blst_fr_sqr(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 79</i><br>
   * @deprecated use the safer methods {@link #blst_fr_sqr(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[])} and {@link #blst_fr_sqr(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_sqr(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a);
  /**
   * Original signature : <code>void blst_fr_sqr(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 79</i>
   */
  void blst_fr_sqr(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[]);
  /**
   * Original signature : <code>void blst_fr_cneg(blst_fr*, const blst_fr*, size_t)</code><br>
   * <i>native declaration : line 80</i><br>
   * @deprecated use the safer methods {@link #blst_fr_cneg(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fr_cneg(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fr_cneg(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a, NativeSize flag);
  /**
   * Original signature : <code>void blst_fr_cneg(blst_fr*, const blst_fr*, size_t)</code><br>
   * <i>native declaration : line 80</i>
   */
  void blst_fr_cneg(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[], NativeSize flag);
  /**
   * Original signature : <code>void blst_fr_to(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 81</i><br>
   * @deprecated use the safer methods {@link #blst_fr_to(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[])} and {@link #blst_fr_to(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_to(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a);
  /**
   * Original signature : <code>void blst_fr_to(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 81</i>
   */
  void blst_fr_to(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[]);
  /**
   * Original signature : <code>void blst_fr_from(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 82</i><br>
   * @deprecated use the safer methods {@link #blst_fr_from(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr[])} and {@link #blst_fr_from(test.TestLibrary.blst_fr, test.TestLibrary.blst_fr)} instead
   */
  @Deprecated
  void blst_fr_from(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a);
  /**
   * Original signature : <code>void blst_fr_from(blst_fr*, const blst_fr*)</code><br>
   * <i>native declaration : line 82</i>
   */
  void blst_fr_from(BlstLibrary.blst_fr ret, BlstLibrary.blst_fr a[]);
  /**
   * BLS12-381-specifc Fp operations.<br>
   * Original signature : <code>void blst_fp_add(blst_fp*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 87</i><br>
   * @deprecated use the safer methods {@link #blst_fp_add(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[], test.TestLibrary.blst_fp[])} and {@link #blst_fp_add(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_add(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a, BlstLibrary.blst_fp b);
  /**
   * BLS12-381-specifc Fp operations.<br>
   * Original signature : <code>void blst_fp_add(blst_fp*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 87</i>
   */
  void blst_fp_add(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[], BlstLibrary.blst_fp b[]);
  /**
   * Original signature : <code>void blst_fp_sub(blst_fp*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 88</i><br>
   * @deprecated use the safer methods {@link #blst_fp_sub(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[], test.TestLibrary.blst_fp[])} and {@link #blst_fp_sub(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_sub(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a, BlstLibrary.blst_fp b);
  /**
   * Original signature : <code>void blst_fp_sub(blst_fp*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 88</i>
   */
  void blst_fp_sub(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[], BlstLibrary.blst_fp b[]);
  /**
   * Original signature : <code>void blst_fp_mul_by_3(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 89</i><br>
   * @deprecated use the safer methods {@link #blst_fp_mul_by_3(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[])} and {@link #blst_fp_mul_by_3(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_mul_by_3(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_fp_mul_by_3(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 89</i>
   */
  void blst_fp_mul_by_3(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_mul_by_8(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 90</i><br>
   * @deprecated use the safer methods {@link #blst_fp_mul_by_8(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[])} and {@link #blst_fp_mul_by_8(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_mul_by_8(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_fp_mul_by_8(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 90</i>
   */
  void blst_fp_mul_by_8(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_lshift(blst_fp*, const blst_fp*, size_t)</code><br>
   * <i>native declaration : line 91</i><br>
   * @deprecated use the safer methods {@link #blst_fp_lshift(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fp_lshift(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fp_lshift(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a, NativeSize count);
  /**
   * Original signature : <code>void blst_fp_lshift(blst_fp*, const blst_fp*, size_t)</code><br>
   * <i>native declaration : line 91</i>
   */
  void blst_fp_lshift(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[], NativeSize count);
  /**
   * Original signature : <code>void blst_fp_mul(blst_fp*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 92</i><br>
   * @deprecated use the safer methods {@link #blst_fp_mul(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[], test.TestLibrary.blst_fp[])} and {@link #blst_fp_mul(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_mul(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a, BlstLibrary.blst_fp b);
  /**
   * Original signature : <code>void blst_fp_mul(blst_fp*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 92</i>
   */
  void blst_fp_mul(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[], BlstLibrary.blst_fp b[]);
  /**
   * Original signature : <code>void blst_fp_sqr(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 93</i><br>
   * @deprecated use the safer methods {@link #blst_fp_sqr(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[])} and {@link #blst_fp_sqr(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_sqr(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_fp_sqr(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 93</i>
   */
  void blst_fp_sqr(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_cneg(blst_fp*, const blst_fp*, size_t)</code><br>
   * <i>native declaration : line 94</i><br>
   * @deprecated use the safer methods {@link #blst_fp_cneg(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fp_cneg(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fp_cneg(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a, NativeSize flag);
  /**
   * Original signature : <code>void blst_fp_cneg(blst_fp*, const blst_fp*, size_t)</code><br>
   * <i>native declaration : line 94</i>
   */
  void blst_fp_cneg(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[], NativeSize flag);
  /**
   * Original signature : <code>void blst_fp_eucl_inverse(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 95</i><br>
   * @deprecated use the safer methods {@link #blst_fp_eucl_inverse(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[])} and {@link #blst_fp_eucl_inverse(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_eucl_inverse(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_fp_eucl_inverse(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 95</i>
   */
  void blst_fp_eucl_inverse(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_to(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 96</i><br>
   * @deprecated use the safer methods {@link #blst_fp_to(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[])} and {@link #blst_fp_to(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_to(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_fp_to(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 96</i>
   */
  void blst_fp_to(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_from(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 97</i><br>
   * @deprecated use the safer methods {@link #blst_fp_from(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp[])} and {@link #blst_fp_from(test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_fp_from(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_fp_from(blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 97</i>
   */
  void blst_fp_from(BlstLibrary.blst_fp ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_from_uint32(blst_fp*, const uint32_t[12])</code><br>
   * <i>native declaration : line 99</i><br>
   * @deprecated use the safer methods {@link #blst_fp_from_uint32(test.TestLibrary.blst_fp, int[])} and {@link #blst_fp_from_uint32(test.TestLibrary.blst_fp, com.sun.jna.ptr.IntByReference)} instead
   */
  @Deprecated
  void blst_fp_from_uint32(BlstLibrary.blst_fp ret, IntByReference a);
  /**
   * Original signature : <code>void blst_fp_from_uint32(blst_fp*, const uint32_t[12])</code><br>
   * <i>native declaration : line 99</i>
   */
  void blst_fp_from_uint32(BlstLibrary.blst_fp ret, int a[]);
  /**
   * Original signature : <code>void blst_uint32_from_fp(uint32_t[12], const blst_fp*)</code><br>
   * <i>native declaration : line 100</i><br>
   * @deprecated use the safer methods {@link #blst_uint32_from_fp(java.nio.IntBuffer, test.TestLibrary.blst_fp[])} and {@link #blst_uint32_from_fp(com.sun.jna.ptr.IntByReference, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_uint32_from_fp(IntByReference ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_uint32_from_fp(uint32_t[12], const blst_fp*)</code><br>
   * <i>native declaration : line 100</i>
   */
  void blst_uint32_from_fp(IntBuffer ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_from_uint64(blst_fp*, const uint64_t[6])</code><br>
   * <i>native declaration : line 101</i><br>
   * @deprecated use the safer methods {@link #blst_fp_from_uint64(test.TestLibrary.blst_fp, long[])} and {@link #blst_fp_from_uint64(test.TestLibrary.blst_fp, com.sun.jna.ptr.LongByReference)} instead
   */
  @Deprecated
  void blst_fp_from_uint64(BlstLibrary.blst_fp ret, LongByReference a);
  /**
   * Original signature : <code>void blst_fp_from_uint64(blst_fp*, const uint64_t[6])</code><br>
   * <i>native declaration : line 101</i>
   */
  void blst_fp_from_uint64(BlstLibrary.blst_fp ret, long a[]);
  /**
   * Original signature : <code>void blst_uint64_from_fp(uint64_t[6], const blst_fp*)</code><br>
   * <i>native declaration : line 102</i><br>
   * @deprecated use the safer methods {@link #blst_uint64_from_fp(java.nio.LongBuffer, test.TestLibrary.blst_fp[])} and {@link #blst_uint64_from_fp(com.sun.jna.ptr.LongByReference, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_uint64_from_fp(LongByReference ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_uint64_from_fp(uint64_t[6], const blst_fp*)</code><br>
   * <i>native declaration : line 102</i>
   */
  void blst_uint64_from_fp(LongBuffer ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_from_bendian(blst_fp*, const byte[48])</code><br>
   * <i>native declaration : line 103</i><br>
   * @deprecated use the safer methods {@link #blst_fp_from_bendian(test.TestLibrary.blst_fp, byte[])} and {@link #blst_fp_from_bendian(test.TestLibrary.blst_fp, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  void blst_fp_from_bendian(BlstLibrary.blst_fp ret, Pointer a);
  /**
   * Original signature : <code>void blst_fp_from_bendian(blst_fp*, const byte[48])</code><br>
   * <i>native declaration : line 103</i>
   */
  void blst_fp_from_bendian(BlstLibrary.blst_fp ret, byte a[]);
  /**
   * Original signature : <code>void blst_bendian_from_fp(byte[48], const blst_fp*)</code><br>
   * <i>native declaration : line 104</i><br>
   * @deprecated use the safer methods {@link #blst_bendian_from_fp(java.nio.ByteBuffer, test.TestLibrary.blst_fp[])} and {@link #blst_bendian_from_fp(com.sun.jna.Pointer, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_bendian_from_fp(ByteBuffer ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_bendian_from_fp(byte[48], const blst_fp*)</code><br>
   * <i>native declaration : line 104</i>
   */
  void blst_bendian_from_fp(ByteBuffer ret, BlstLibrary.blst_fp a[]);
  /**
   * Original signature : <code>void blst_fp_from_lendian(blst_fp*, const byte[48])</code><br>
   * <i>native declaration : line 105</i><br>
   * @deprecated use the safer methods {@link #blst_fp_from_lendian(test.TestLibrary.blst_fp, byte[])} and {@link #blst_fp_from_lendian(test.TestLibrary.blst_fp, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  void blst_fp_from_lendian(BlstLibrary.blst_fp ret, Pointer a);
  /**
   * Original signature : <code>void blst_fp_from_lendian(blst_fp*, const byte[48])</code><br>
   * <i>native declaration : line 105</i>
   */
  void blst_fp_from_lendian(BlstLibrary.blst_fp ret, byte a[]);
  /**
   * Original signature : <code>void blst_lendian_from_fp(byte[48], const blst_fp*)</code><br>
   * <i>native declaration : line 106</i><br>
   * @deprecated use the safer methods {@link #blst_lendian_from_fp(java.nio.ByteBuffer, test.TestLibrary.blst_fp[])} and {@link #blst_lendian_from_fp(com.sun.jna.Pointer, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_lendian_from_fp(Pointer ret, BlstLibrary.blst_fp a);
  /**
   * Original signature : <code>void blst_lendian_from_fp(byte[48], const blst_fp*)</code><br>
   * <i>native declaration : line 106</i>
   */
  void blst_lendian_from_fp(ByteBuffer ret, BlstLibrary.blst_fp a[]);
  /**
   * BLS12-381-specifc Fp2 operations.<br>
   * Original signature : <code>void blst_fp2_add(blst_fp2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 111</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_add(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[], test.TestLibrary.blst_fp2[])} and {@link #blst_fp2_add(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_fp2_add(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a, BlstLibrary.blst_fp2 b);
  /**
   * BLS12-381-specifc Fp2 operations.<br>
   * Original signature : <code>void blst_fp2_add(blst_fp2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 111</i>
   */
  void blst_fp2_add(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[], BlstLibrary.blst_fp2 b[]);
  /**
   * Original signature : <code>void blst_fp2_sub(blst_fp2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 112</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_sub(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[], test.TestLibrary.blst_fp2[])} and {@link #blst_fp2_sub(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_fp2_sub(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a, BlstLibrary.blst_fp2 b);
  /**
   * Original signature : <code>void blst_fp2_sub(blst_fp2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 112</i>
   */
  void blst_fp2_sub(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[], BlstLibrary.blst_fp2 b[]);
  /**
   * Original signature : <code>void blst_fp2_mul_by_3(blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 113</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_mul_by_3(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[])} and {@link #blst_fp2_mul_by_3(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_fp2_mul_by_3(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a);
  /**
   * Original signature : <code>void blst_fp2_mul_by_3(blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 113</i>
   */
  void blst_fp2_mul_by_3(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[]);
  /**
   * Original signature : <code>void blst_fp2_mul_by_8(blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 114</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_mul_by_8(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[])} and {@link #blst_fp2_mul_by_8(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_fp2_mul_by_8(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a);
  /**
   * Original signature : <code>void blst_fp2_mul_by_8(blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 114</i>
   */
  void blst_fp2_mul_by_8(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[]);
  /**
   * Original signature : <code>void blst_fp2_lshift(blst_fp2*, const blst_fp2*, size_t)</code><br>
   * <i>native declaration : line 115</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_lshift(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fp2_lshift(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fp2_lshift(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a, NativeSize count);
  /**
   * Original signature : <code>void blst_fp2_lshift(blst_fp2*, const blst_fp2*, size_t)</code><br>
   * <i>native declaration : line 115</i>
   */
  void blst_fp2_lshift(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[], NativeSize count);
  /**
   * Original signature : <code>void blst_fp2_mul(blst_fp2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 116</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_mul(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[], test.TestLibrary.blst_fp2[])} and {@link #blst_fp2_mul(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_fp2_mul(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a, BlstLibrary.blst_fp2 b);
  /**
   * Original signature : <code>void blst_fp2_mul(blst_fp2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 116</i>
   */
  void blst_fp2_mul(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[], BlstLibrary.blst_fp2 b[]);
  /**
   * Original signature : <code>void blst_fp2_sqr(blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 117</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_sqr(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[])} and {@link #blst_fp2_sqr(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_fp2_sqr(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a);
  /**
   * Original signature : <code>void blst_fp2_sqr(blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 117</i>
   */
  void blst_fp2_sqr(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[]);
  /**
   * Original signature : <code>void blst_fp2_cneg(blst_fp2*, const blst_fp2*, size_t)</code><br>
   * <i>native declaration : line 118</i><br>
   * @deprecated use the safer methods {@link #blst_fp2_cneg(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fp2_cneg(test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fp2_cneg(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a, NativeSize flag);
  /**
   * Original signature : <code>void blst_fp2_cneg(blst_fp2*, const blst_fp2*, size_t)</code><br>
   * <i>native declaration : line 118</i>
   */
  void blst_fp2_cneg(BlstLibrary.blst_fp2 ret, BlstLibrary.blst_fp2 a[], NativeSize flag);
  /**
   * BLS12-381-specifc Fp12 operations.<br>
   * Original signature : <code>void blst_fp12_sqr(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 123</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_sqr(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[])} and {@link #blst_fp12_sqr(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  void blst_fp12_sqr(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a);
  /**
   * BLS12-381-specifc Fp12 operations.<br>
   * Original signature : <code>void blst_fp12_sqr(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 123</i>
   */
  void blst_fp12_sqr(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a[]);
  /**
   * Original signature : <code>void blst_fp12_cyclotomic_sqr(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 124</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_cyclotomic_sqr(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[])} and {@link #blst_fp12_cyclotomic_sqr(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  void blst_fp12_cyclotomic_sqr(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a);
  /**
   * Original signature : <code>void blst_fp12_cyclotomic_sqr(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 124</i>
   */
  void blst_fp12_cyclotomic_sqr(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a[]);
  /**
   * Original signature : <code>void blst_fp12_mul(blst_fp12*, const blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 125</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_mul(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[], test.TestLibrary.blst_fp12[])} and {@link #blst_fp12_mul(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  void blst_fp12_mul(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a, BlstLibrary.blst_fp12 b);
  /**
   * Original signature : <code>void blst_fp12_mul(blst_fp12*, const blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 125</i>
   */
  void blst_fp12_mul(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a[], BlstLibrary.blst_fp12 b[]);
  /**
   * Original signature : <code>void blst_fp12_mul_by_xy00z0(blst_fp12*, const blst_fp12*, const blst_fp6*)</code><br>
   * <i>native declaration : line 126</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_mul_by_xy00z0(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[], test.TestLibrary.blst_fp6[])} and {@link #blst_fp12_mul_by_xy00z0(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp6)} instead
   */
  @Deprecated
  void blst_fp12_mul_by_xy00z0(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a, BlstLibrary.blst_fp6 xy00z0);
  /**
   * Original signature : <code>void blst_fp12_mul_by_xy00z0(blst_fp12*, const blst_fp12*, const blst_fp6*)</code><br>
   * <i>native declaration : line 126</i>
   */
  void blst_fp12_mul_by_xy00z0(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a[], BlstLibrary.blst_fp6 xy00z0[]);
  /**
   * Original signature : <code>void blst_fp12_conjugate(blst_fp12*)</code><br>
   * <i>native declaration : line 128</i>
   */
  void blst_fp12_conjugate(BlstLibrary.blst_fp12 a);
  /**
   * Original signature : <code>void blst_fp12_inverse(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 129</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_inverse(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[])} and {@link #blst_fp12_inverse(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  void blst_fp12_inverse(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a);
  /**
   * Original signature : <code>void blst_fp12_inverse(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 129</i>
   */
  void blst_fp12_inverse(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a[]);
  /**
   * caveat lector! |n| has to be non-zero and not more than 3!<br>
   * Original signature : <code>void blst_fp12_frobenius_map(blst_fp12*, const blst_fp12*, size_t)</code><br>
   * <i>native declaration : line 131</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_frobenius_map(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_fp12_frobenius_map(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_fp12_frobenius_map(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a, NativeSize n);
  /**
   * caveat lector! |n| has to be non-zero and not more than 3!<br>
   * Original signature : <code>void blst_fp12_frobenius_map(blst_fp12*, const blst_fp12*, size_t)</code><br>
   * <i>native declaration : line 131</i>
   */
  void blst_fp12_frobenius_map(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 a[], NativeSize n);
  /**
   * Original signature : <code>bool blst_fp12_is_equal(const blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 132</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_is_equal(test.TestLibrary.blst_fp12[], test.TestLibrary.blst_fp12[])} and {@link #blst_fp12_is_equal(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  byte blst_fp12_is_equal(BlstLibrary.blst_fp12 a, BlstLibrary.blst_fp12 b);
  /**
   * Original signature : <code>bool blst_fp12_is_equal(const blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 132</i>
   */
  byte blst_fp12_is_equal(BlstLibrary.blst_fp12 a[], BlstLibrary.blst_fp12 b[]);
  /**
   * Original signature : <code>bool blst_fp12_is_one(const blst_fp12*)</code><br>
   * <i>native declaration : line 133</i><br>
   * @deprecated use the safer methods {@link #blst_fp12_is_one(test.TestLibrary.blst_fp12[])} and {@link #blst_fp12_is_one(test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  byte blst_fp12_is_one(BlstLibrary.blst_fp12 a);
  /**
   * Original signature : <code>bool blst_fp12_is_one(const blst_fp12*)</code><br>
   * <i>native declaration : line 133</i>
   */
  byte blst_fp12_is_one(BlstLibrary.blst_fp12 a[]);
  /**
   * Original signature : <code>void blst_p1_add(blst_p1*, const blst_p1*, const blst_p1*)</code><br>
   * <i>native declaration : line 142</i><br>
   * @deprecated use the safer methods {@link #blst_p1_add(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], test.TestLibrary.blst_p1[])} and {@link #blst_p1_add(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, test.TestLibrary.blst_p1)} instead
   */
  @Deprecated
  void blst_p1_add(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a, BlstLibrary.blst_p1 b);
  /**
   * Original signature : <code>void blst_p1_add(blst_p1*, const blst_p1*, const blst_p1*)</code><br>
   * <i>native declaration : line 142</i>
   */
  void blst_p1_add(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a[], BlstLibrary.blst_p1 b[]);
  /**
   * Original signature : <code>void blst_p1_add_or_double(blst_p1*, const blst_p1*, const blst_p1*)</code><br>
   * <i>native declaration : line 143</i><br>
   * @deprecated use the safer methods {@link #blst_p1_add_or_double(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], test.TestLibrary.blst_p1[])} and {@link #blst_p1_add_or_double(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, test.TestLibrary.blst_p1)} instead
   */
  @Deprecated
  void blst_p1_add_or_double(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a, BlstLibrary.blst_p1 b);
  /**
   * Original signature : <code>void blst_p1_add_or_double(blst_p1*, const blst_p1*, const blst_p1*)</code><br>
   * <i>native declaration : line 143</i>
   */
  void blst_p1_add_or_double(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a[], BlstLibrary.blst_p1 b[]);
  /**
   * Original signature : <code>void blst_p1_add_affine(blst_p1*, const blst_p1*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 144</i><br>
   * @deprecated use the safer methods {@link #blst_p1_add_affine(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_add_affine(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_p1_add_affine(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a, BlstLibrary.blst_p1_affine b);
  /**
   * Original signature : <code>void blst_p1_add_affine(blst_p1*, const blst_p1*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 144</i>
   */
  void blst_p1_add_affine(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a[], BlstLibrary.blst_p1_affine b[]);
  /**
   * Original signature : <code>void blst_p1_add_or_double_affine(blst_p1*, const blst_p1*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 146</i><br>
   * @deprecated use the safer methods {@link #blst_p1_add_or_double_affine(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_add_or_double_affine(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_p1_add_or_double_affine(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a, BlstLibrary.blst_p1_affine b);
  /**
   * Original signature : <code>void blst_p1_add_or_double_affine(blst_p1*, const blst_p1*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 146</i>
   */
  void blst_p1_add_or_double_affine(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a[], BlstLibrary.blst_p1_affine b[]);
  /**
   * Original signature : <code>void blst_p1_double(blst_p1*, const blst_p1*)</code><br>
   * <i>native declaration : line 148</i><br>
   * @deprecated use the safer methods {@link #blst_p1_double(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[])} and {@link #blst_p1_double(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1)} instead
   */
  @Deprecated
  void blst_p1_double(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a);
  /**
   * Original signature : <code>void blst_p1_double(blst_p1*, const blst_p1*)</code><br>
   * <i>native declaration : line 148</i>
   */
  void blst_p1_double(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 a[]);
  /**
   * Original signature : <code>void blst_p1_mult_w5(blst_p1*, const blst_p1*, const blst_scalar*, size_t)</code><br>
   * <i>native declaration : line 149</i><br>
   * @deprecated use the safer methods {@link #blst_p1_mult_w5(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], test.TestLibrary.blst_scalar[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_p1_mult_w5(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, test.TestLibrary.blst_scalar, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_p1_mult_w5(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 p, BlstLibrary.blst_scalar scalar, NativeSize nbits);
  /**
   * Original signature : <code>void blst_p1_mult_w5(blst_p1*, const blst_p1*, const blst_scalar*, size_t)</code><br>
   * <i>native declaration : line 149</i>
   */
  void blst_p1_mult_w5(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 p[], BlstLibrary.blst_scalar scalar[], NativeSize nbits);
  /**
   * Original signature : <code>void blst_p1_cneg(blst_p1*, size_t)</code><br>
   * <i>native declaration : line 151</i>
   */
  void blst_p1_cneg(BlstLibrary.blst_p1 p, NativeSize cbit);
  /**
   * Original signature : <code>void blst_p1_to_affine(blst_p1_affine*, const blst_p1*)</code><br>
   * <i>native declaration : line 152</i><br>
   * @deprecated use the safer methods {@link #blst_p1_to_affine(test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p1[])} and {@link #blst_p1_to_affine(test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p1)} instead
   */
  @Deprecated
  void blst_p1_to_affine(BlstLibrary.blst_p1_affine out, BlstLibrary.blst_p1 in);
  /**
   * Original signature : <code>void blst_p1_to_affine(blst_p1_affine*, const blst_p1*)</code><br>
   * <i>native declaration : line 152</i>
   */
  void blst_p1_to_affine(BlstLibrary.blst_p1_affine out, BlstLibrary.blst_p1 in[]);
  /**
   * Original signature : <code>void blst_p1_from_affine(blst_p1*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 153</i><br>
   * @deprecated use the safer methods {@link #blst_p1_from_affine(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_from_affine(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_p1_from_affine(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1_affine in);
  /**
   * Original signature : <code>void blst_p1_from_affine(blst_p1*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 153</i>
   */
  void blst_p1_from_affine(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1_affine in[]);
  /**
   * Original signature : <code>bool blst_p1_affine_on_curve(const blst_p1_affine*)</code><br>
   * <i>native declaration : line 154</i><br>
   * @deprecated use the safer methods {@link #blst_p1_affine_on_curve(test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_affine_on_curve(test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  byte blst_p1_affine_on_curve(BlstLibrary.blst_p1_affine p);
  /**
   * Original signature : <code>bool blst_p1_affine_on_curve(const blst_p1_affine*)</code><br>
   * <i>native declaration : line 154</i>
   */
  byte blst_p1_affine_on_curve(BlstLibrary.blst_p1_affine p[]);
  /**
   * Original signature : <code>bool blst_p1_affine_in_g1(const blst_p1_affine*)</code><br>
   * <i>native declaration : line 155</i><br>
   * @deprecated use the safer methods {@link #blst_p1_affine_in_g1(test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_affine_in_g1(test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  byte blst_p1_affine_in_g1(BlstLibrary.blst_p1_affine p);
  /**
   * Original signature : <code>bool blst_p1_affine_in_g1(const blst_p1_affine*)</code><br>
   * <i>native declaration : line 155</i>
   */
  byte blst_p1_affine_in_g1(BlstLibrary.blst_p1_affine p[]);
  /**
   * Original signature : <code>bool blst_p1_affine_is_equal(const blst_p1_affine*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 156</i><br>
   * @deprecated use the safer methods {@link #blst_p1_affine_is_equal(test.TestLibrary.blst_p1_affine[], test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_affine_is_equal(test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  byte blst_p1_affine_is_equal(BlstLibrary.blst_p1_affine a, BlstLibrary.blst_p1_affine b);
  /**
   * Original signature : <code>bool blst_p1_affine_is_equal(const blst_p1_affine*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 156</i>
   */
  byte blst_p1_affine_is_equal(BlstLibrary.blst_p1_affine a[], BlstLibrary.blst_p1_affine b[]);
  /**
   * Original signature : <code>void blst_p2_add(blst_p2*, const blst_p2*, const blst_p2*)</code><br>
   * <i>native declaration : line 161</i><br>
   * @deprecated use the safer methods {@link #blst_p2_add(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], test.TestLibrary.blst_p2[])} and {@link #blst_p2_add(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, test.TestLibrary.blst_p2)} instead
   */
  @Deprecated
  void blst_p2_add(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a, BlstLibrary.blst_p2 b);
  /**
   * Original signature : <code>void blst_p2_add(blst_p2*, const blst_p2*, const blst_p2*)</code><br>
   * <i>native declaration : line 161</i>
   */
  void blst_p2_add(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a[], BlstLibrary.blst_p2 b[]);
  /**
   * Original signature : <code>void blst_p2_add_or_double(blst_p2*, const blst_p2*, const blst_p2*)</code><br>
   * <i>native declaration : line 162</i><br>
   * @deprecated use the safer methods {@link #blst_p2_add_or_double(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], test.TestLibrary.blst_p2[])} and {@link #blst_p2_add_or_double(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, test.TestLibrary.blst_p2)} instead
   */
  @Deprecated
  void blst_p2_add_or_double(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a, BlstLibrary.blst_p2 b);
  /**
   * Original signature : <code>void blst_p2_add_or_double(blst_p2*, const blst_p2*, const blst_p2*)</code><br>
   * <i>native declaration : line 162</i>
   */
  void blst_p2_add_or_double(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a[], BlstLibrary.blst_p2 b[]);
  /**
   * Original signature : <code>void blst_p2_add_affine(blst_p2*, const blst_p2*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 163</i><br>
   * @deprecated use the safer methods {@link #blst_p2_add_affine(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_add_affine(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_p2_add_affine(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a, BlstLibrary.blst_p2_affine b);
  /**
   * Original signature : <code>void blst_p2_add_affine(blst_p2*, const blst_p2*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 163</i>
   */
  void blst_p2_add_affine(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a[], BlstLibrary.blst_p2_affine b[]);
  /**
   * Original signature : <code>void blst_p2_add_or_double_affine(blst_p2*, const blst_p2*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 165</i><br>
   * @deprecated use the safer methods {@link #blst_p2_add_or_double_affine(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_add_or_double_affine(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_p2_add_or_double_affine(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a, BlstLibrary.blst_p2_affine b);
  /**
   * Original signature : <code>void blst_p2_add_or_double_affine(blst_p2*, const blst_p2*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 165</i>
   */
  void blst_p2_add_or_double_affine(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a[], BlstLibrary.blst_p2_affine b[]);
  /**
   * Original signature : <code>void blst_p2_double(blst_p2*, const blst_p2*)</code><br>
   * <i>native declaration : line 167</i><br>
   * @deprecated use the safer methods {@link #blst_p2_double(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[])} and {@link #blst_p2_double(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2)} instead
   */
  @Deprecated
  void blst_p2_double(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a);
  /**
   * Original signature : <code>void blst_p2_double(blst_p2*, const blst_p2*)</code><br>
   * <i>native declaration : line 167</i>
   */
  void blst_p2_double(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 a[]);
  /**
   * Original signature : <code>void blst_p2_mult_w5(blst_p2*, const blst_p2*, const blst_scalar*, size_t)</code><br>
   * <i>native declaration : line 168</i><br>
   * @deprecated use the safer methods {@link #blst_p2_mult_w5(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], test.TestLibrary.blst_scalar[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_p2_mult_w5(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, test.TestLibrary.blst_scalar, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_p2_mult_w5(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 p, BlstLibrary.blst_scalar scalar, NativeSize nbits);
  /**
   * Original signature : <code>void blst_p2_mult_w5(blst_p2*, const blst_p2*, const blst_scalar*, size_t)</code><br>
   * <i>native declaration : line 168</i>
   */
  void blst_p2_mult_w5(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 p[], BlstLibrary.blst_scalar scalar[], NativeSize nbits);
  /**
   * Original signature : <code>void blst_p2_cneg(blst_p2*, size_t)</code><br>
   * <i>native declaration : line 170</i>
   */
  void blst_p2_cneg(BlstLibrary.blst_p2 p, NativeSize cbit);
  /**
   * Original signature : <code>void blst_p2_to_affine(blst_p2_affine*, const blst_p2*)</code><br>
   * <i>native declaration : line 171</i><br>
   * @deprecated use the safer methods {@link #blst_p2_to_affine(test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p2[])} and {@link #blst_p2_to_affine(test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p2)} instead
   */
  @Deprecated
  void blst_p2_to_affine(BlstLibrary.blst_p2_affine out, BlstLibrary.blst_p2 in);
  /**
   * Original signature : <code>void blst_p2_to_affine(blst_p2_affine*, const blst_p2*)</code><br>
   * <i>native declaration : line 171</i>
   */
  void blst_p2_to_affine(BlstLibrary.blst_p2_affine out, BlstLibrary.blst_p2 in[]);
  /**
   * Original signature : <code>void blst_p2_from_affine(blst_p2*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 172</i><br>
   * @deprecated use the safer methods {@link #blst_p2_from_affine(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_from_affine(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_p2_from_affine(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2_affine in);
  /**
   * Original signature : <code>void blst_p2_from_affine(blst_p2*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 172</i>
   */
  void blst_p2_from_affine(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2_affine in[]);
  /**
   * Original signature : <code>bool blst_p2_affine_on_curve(const blst_p2_affine*)</code><br>
   * <i>native declaration : line 173</i><br>
   * @deprecated use the safer methods {@link #blst_p2_affine_on_curve(test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_affine_on_curve(test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  byte blst_p2_affine_on_curve(BlstLibrary.blst_p2_affine p);
  /**
   * Original signature : <code>bool blst_p2_affine_on_curve(const blst_p2_affine*)</code><br>
   * <i>native declaration : line 173</i>
   */
  byte blst_p2_affine_on_curve(BlstLibrary.blst_p2_affine p[]);
  /**
   * Original signature : <code>bool blst_p2_affine_in_g2(const blst_p2_affine*)</code><br>
   * <i>native declaration : line 174</i><br>
   * @deprecated use the safer methods {@link #blst_p2_affine_in_g2(test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_affine_in_g2(test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  byte blst_p2_affine_in_g2(BlstLibrary.blst_p2_affine p);
  /**
   * Original signature : <code>bool blst_p2_affine_in_g2(const blst_p2_affine*)</code><br>
   * <i>native declaration : line 174</i>
   */
  byte blst_p2_affine_in_g2(BlstLibrary.blst_p2_affine p[]);
  /**
   * Original signature : <code>bool blst_p2_affine_is_equal(const blst_p2_affine*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 175</i><br>
   * @deprecated use the safer methods {@link #blst_p2_affine_is_equal(test.TestLibrary.blst_p2_affine[], test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_affine_is_equal(test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  byte blst_p2_affine_is_equal(BlstLibrary.blst_p2_affine a, BlstLibrary.blst_p2_affine b);
  /**
   * Original signature : <code>bool blst_p2_affine_is_equal(const blst_p2_affine*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 175</i>
   */
  byte blst_p2_affine_is_equal(BlstLibrary.blst_p2_affine a[], BlstLibrary.blst_p2_affine b[]);
  /**
   * Original signature : <code>void blst_map_to_g1(blst_p1*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 181</i><br>
   * @deprecated use the safer methods {@link #blst_map_to_g1(test.TestLibrary.blst_p1, test.TestLibrary.blst_fp[], test.TestLibrary.blst_fp[])} and {@link #blst_map_to_g1(test.TestLibrary.blst_p1, test.TestLibrary.blst_fp, test.TestLibrary.blst_fp)} instead
   */
  @Deprecated
  void blst_map_to_g1(BlstLibrary.blst_p1 out, BlstLibrary.blst_fp u, BlstLibrary.blst_fp v);
  /**
   * Original signature : <code>void blst_map_to_g1(blst_p1*, const blst_fp*, const blst_fp*)</code><br>
   * <i>native declaration : line 181</i>
   */
  void blst_map_to_g1(BlstLibrary.blst_p1 out, BlstLibrary.blst_fp u[], BlstLibrary.blst_fp v[]);
  /**
   * Original signature : <code>void blst_map_to_g2(blst_p2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 182</i><br>
   * @deprecated use the safer methods {@link #blst_map_to_g2(test.TestLibrary.blst_p2, test.TestLibrary.blst_fp2[], test.TestLibrary.blst_fp2[])} and {@link #blst_map_to_g2(test.TestLibrary.blst_p2, test.TestLibrary.blst_fp2, test.TestLibrary.blst_fp2)} instead
   */
  @Deprecated
  void blst_map_to_g2(BlstLibrary.blst_p2 out, BlstLibrary.blst_fp2 u, BlstLibrary.blst_fp2 v);
  /**
   * Original signature : <code>void blst_map_to_g2(blst_p2*, const blst_fp2*, const blst_fp2*)</code><br>
   * <i>native declaration : line 182</i>
   */
  void blst_map_to_g2(BlstLibrary.blst_p2 out, BlstLibrary.blst_fp2 u[], BlstLibrary.blst_fp2 v[]);
  /**
   * Original signature : <code>void blst_encode_to_g1(blst_p1*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 185</i><br>
   * @deprecated use the safer methods {@link #blst_encode_to_g1(test.TestLibrary.blst_p1, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_encode_to_g1(test.TestLibrary.blst_p1, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_encode_to_g1(BlstLibrary.blst_p1 out, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>void blst_encode_to_g1(blst_p1*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 185</i>
   */
  void blst_encode_to_g1(BlstLibrary.blst_p1 out, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Original signature : <code>void blst_hash_to_g1(blst_p1*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 189</i><br>
   * @deprecated use the safer methods {@link #blst_hash_to_g1(test.TestLibrary.blst_p1, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_hash_to_g1(test.TestLibrary.blst_p1, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_hash_to_g1(BlstLibrary.blst_p1 out, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>void blst_hash_to_g1(blst_p1*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 189</i>
   */
  void blst_hash_to_g1(BlstLibrary.blst_p1 out, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Original signature : <code>void blst_encode_to_g2(blst_p2*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 194</i><br>
   * @deprecated use the safer methods {@link #blst_encode_to_g2(test.TestLibrary.blst_p2, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_encode_to_g2(test.TestLibrary.blst_p2, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_encode_to_g2(BlstLibrary.blst_p2 out, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>void blst_encode_to_g2(blst_p2*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 194</i>
   */
  void blst_encode_to_g2(BlstLibrary.blst_p2 out, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Original signature : <code>void blst_hash_to_g2(blst_p2*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 198</i><br>
   * @deprecated use the safer methods {@link #blst_hash_to_g2(test.TestLibrary.blst_p2, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_hash_to_g2(test.TestLibrary.blst_p2, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_hash_to_g2(BlstLibrary.blst_p2 out, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>void blst_hash_to_g2(blst_p2*, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 198</i>
   */
  void blst_hash_to_g2(BlstLibrary.blst_p2 out, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Zcash-compatible serialization/deserialization.<br>
   * Original signature : <code>void blst_p1_serialize(byte[96], const blst_p1*)</code><br>
   * <i>native declaration : line 206</i><br>
   * @deprecated use the safer methods {@link #blst_p1_serialize(java.nio.ByteBuffer, test.TestLibrary.blst_p1[])} and {@link #blst_p1_serialize(com.sun.jna.Pointer, test.TestLibrary.blst_p1)} instead
   */
  @Deprecated
  void blst_p1_serialize(Pointer out, BlstLibrary.blst_p1 in);
  /**
   * Zcash-compatible serialization/deserialization.<br>
   * Original signature : <code>void blst_p1_serialize(byte[96], const blst_p1*)</code><br>
   * <i>native declaration : line 206</i>
   */
  void blst_p1_serialize(ByteBuffer out, BlstLibrary.blst_p1 in[]);
  /**
   * Original signature : <code>void blst_p1_compress(byte[48], const blst_p1*)</code><br>
   * <i>native declaration : line 207</i><br>
   * @deprecated use the safer methods {@link #blst_p1_compress(java.nio.ByteBuffer, test.TestLibrary.blst_p1[])} and {@link #blst_p1_compress(com.sun.jna.Pointer, test.TestLibrary.blst_p1)} instead
   */
  @Deprecated
  void blst_p1_compress(Pointer out, BlstLibrary.blst_p1 in);
  /**
   * Original signature : <code>void blst_p1_compress(byte[48], const blst_p1*)</code><br>
   * <i>native declaration : line 207</i>
   */
  void blst_p1_compress(ByteBuffer out, BlstLibrary.blst_p1 in[]);
  /**
   * Original signature : <code>void blst_p1_affine_serialize(byte[96], const blst_p1_affine*)</code><br>
   * <i>native declaration : line 208</i><br>
   * @deprecated use the safer methods {@link #blst_p1_affine_serialize(java.nio.ByteBuffer, test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_affine_serialize(com.sun.jna.Pointer, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_p1_affine_serialize(Pointer out, BlstLibrary.blst_p1_affine in);
  /**
   * Original signature : <code>void blst_p1_affine_serialize(byte[96], const blst_p1_affine*)</code><br>
   * <i>native declaration : line 208</i>
   */
  void blst_p1_affine_serialize(ByteBuffer out, BlstLibrary.blst_p1_affine in[]);
  /**
   * Original signature : <code>void blst_p1_affine_compress(byte[48], const blst_p1_affine*)</code><br>
   * <i>native declaration : line 209</i><br>
   * @deprecated use the safer methods {@link #blst_p1_affine_compress(java.nio.ByteBuffer, test.TestLibrary.blst_p1_affine[])} and {@link #blst_p1_affine_compress(com.sun.jna.Pointer, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_p1_affine_compress(Pointer out, BlstLibrary.blst_p1_affine in);
  /**
   * Original signature : <code>void blst_p1_affine_compress(byte[48], const blst_p1_affine*)</code><br>
   * <i>native declaration : line 209</i>
   */
  void blst_p1_affine_compress(ByteBuffer out, BlstLibrary.blst_p1_affine in[]);
  /**
   * Original signature : <code>BLST_ERROR blst_p1_uncompress(blst_p1_affine*, const byte[48])</code><br>
   * <i>native declaration : line 210</i><br>
   * @deprecated use the safer methods {@link #blst_p1_uncompress(test.TestLibrary.blst_p1_affine, byte[])} and {@link #blst_p1_uncompress(test.TestLibrary.blst_p1_affine, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_p1_uncompress(BlstLibrary.blst_p1_affine out, Pointer in);
  /**
   * Original signature : <code>BLST_ERROR blst_p1_uncompress(blst_p1_affine*, const byte[48])</code><br>
   * <i>native declaration : line 210</i>
   */
  BlstLibrary.BLST_ERROR blst_p1_uncompress(BlstLibrary.blst_p1_affine out, byte in[]);
  /**
   * Original signature : <code>BLST_ERROR blst_p1_deserialize(blst_p1_affine*, const byte[96])</code><br>
   * <i>native declaration : line 211</i><br>
   * @deprecated use the safer methods {@link #blst_p1_deserialize(test.TestLibrary.blst_p1_affine, byte[])} and {@link #blst_p1_deserialize(test.TestLibrary.blst_p1_affine, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_p1_deserialize(BlstLibrary.blst_p1_affine out, Pointer in);
  /**
   * Original signature : <code>BLST_ERROR blst_p1_deserialize(blst_p1_affine*, const byte[96])</code><br>
   * <i>native declaration : line 211</i>
   */
  BlstLibrary.BLST_ERROR blst_p1_deserialize(BlstLibrary.blst_p1_affine out, byte in[]);
  /**
   * Original signature : <code>void blst_p2_serialize(byte[192], const blst_p2*)</code><br>
   * <i>native declaration : line 213</i><br>
   * @deprecated use the safer methods {@link #blst_p2_serialize(java.nio.ByteBuffer, test.TestLibrary.blst_p2[])} and {@link #blst_p2_serialize(com.sun.jna.Pointer, test.TestLibrary.blst_p2)} instead
   */
  @Deprecated
  void blst_p2_serialize(Pointer out, BlstLibrary.blst_p2 in);
  /**
   * Original signature : <code>void blst_p2_serialize(byte[192], const blst_p2*)</code><br>
   * <i>native declaration : line 213</i>
   */
  void blst_p2_serialize(ByteBuffer out, BlstLibrary.blst_p2 in[]);
  /**
   * Original signature : <code>void blst_p2_compress(byte[96], const blst_p2*)</code><br>
   * <i>native declaration : line 214</i><br>
   * @deprecated use the safer methods {@link #blst_p2_compress(java.nio.ByteBuffer, test.TestLibrary.blst_p2[])} and {@link #blst_p2_compress(com.sun.jna.Pointer, test.TestLibrary.blst_p2)} instead
   */
  @Deprecated
  void blst_p2_compress(Pointer out, BlstLibrary.blst_p2 in);
  /**
   * Original signature : <code>void blst_p2_compress(byte[96], const blst_p2*)</code><br>
   * <i>native declaration : line 214</i>
   */
  void blst_p2_compress(ByteBuffer out, BlstLibrary.blst_p2 in[]);
  /**
   * Original signature : <code>void blst_p2_affine_serialize(byte[192], const blst_p2_affine*)</code><br>
   * <i>native declaration : line 215</i><br>
   * @deprecated use the safer methods {@link #blst_p2_affine_serialize(java.nio.ByteBuffer, test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_affine_serialize(com.sun.jna.Pointer, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_p2_affine_serialize(Pointer out, BlstLibrary.blst_p2_affine in);
  /**
   * Original signature : <code>void blst_p2_affine_serialize(byte[192], const blst_p2_affine*)</code><br>
   * <i>native declaration : line 215</i>
   */
  void blst_p2_affine_serialize(ByteBuffer out, BlstLibrary.blst_p2_affine in[]);
  /**
   * Original signature : <code>void blst_p2_affine_compress(byte[96], const blst_p2_affine*)</code><br>
   * <i>native declaration : line 216</i><br>
   * @deprecated use the safer methods {@link #blst_p2_affine_compress(java.nio.ByteBuffer, test.TestLibrary.blst_p2_affine[])} and {@link #blst_p2_affine_compress(com.sun.jna.Pointer, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_p2_affine_compress(Pointer out, BlstLibrary.blst_p2_affine in);
  /**
   * Original signature : <code>void blst_p2_affine_compress(byte[96], const blst_p2_affine*)</code><br>
   * <i>native declaration : line 216</i>
   */
  void blst_p2_affine_compress(ByteBuffer out, BlstLibrary.blst_p2_affine in[]);
  /**
   * Original signature : <code>BLST_ERROR blst_p2_uncompress(blst_p2_affine*, const byte[96])</code><br>
   * <i>native declaration : line 217</i><br>
   * @deprecated use the safer methods {@link #blst_p2_uncompress(test.TestLibrary.blst_p2_affine, byte[])} and {@link #blst_p2_uncompress(test.TestLibrary.blst_p2_affine, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_p2_uncompress(BlstLibrary.blst_p2_affine out, Pointer in);
  /**
   * Original signature : <code>BLST_ERROR blst_p2_uncompress(blst_p2_affine*, const byte[96])</code><br>
   * <i>native declaration : line 217</i>
   */
  BlstLibrary.BLST_ERROR blst_p2_uncompress(BlstLibrary.blst_p2_affine out, byte in[]);
  /**
   * Original signature : <code>BLST_ERROR blst_p2_deserialize(blst_p2_affine*, const byte[192])</code><br>
   * <i>native declaration : line 218</i><br>
   * @deprecated use the safer methods {@link #blst_p2_deserialize(test.TestLibrary.blst_p2_affine, byte[])} and {@link #blst_p2_deserialize(test.TestLibrary.blst_p2_affine, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_p2_deserialize(BlstLibrary.blst_p2_affine out, Pointer in);
  /**
   * Original signature : <code>BLST_ERROR blst_p2_deserialize(blst_p2_affine*, const byte[192])</code><br>
   * <i>native declaration : line 218</i>
   */
  BlstLibrary.BLST_ERROR blst_p2_deserialize(BlstLibrary.blst_p2_affine out, byte in[]);
  /**
   * Secret-key operations.<br>
   * Original signature : <code>void blst_keygen(blst_scalar*, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 232</i><br>
   * @deprecated use the safer methods {@link #blst_keygen(test.TestLibrary.blst_scalar, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_keygen(test.TestLibrary.blst_scalar, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  void blst_keygen(BlstLibrary.blst_scalar out_SK, Pointer IKM, NativeSize IKM_len, Pointer info, NativeSize info_len);
  /**
   * Secret-key operations.<br>
   * Original signature : <code>void blst_keygen(blst_scalar*, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 232</i>
   */
  void blst_keygen(BlstLibrary.blst_scalar out_SK, byte IKM[], NativeSize IKM_len, byte info[], NativeSize info_len);
  /**
   * Original signature : <code>void blst_sk_to_pk_in_g1(blst_p1*, const blst_scalar*)</code><br>
   * <i>native declaration : line 234</i><br>
   * @deprecated use the safer methods {@link #blst_sk_to_pk_in_g1(test.TestLibrary.blst_p1, test.TestLibrary.blst_scalar[])} and {@link #blst_sk_to_pk_in_g1(test.TestLibrary.blst_p1, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_sk_to_pk_in_g1(BlstLibrary.blst_p1 out_pk, BlstLibrary.blst_scalar SK);
  /**
   * Original signature : <code>void blst_sk_to_pk_in_g1(blst_p1*, const blst_scalar*)</code><br>
   * <i>native declaration : line 234</i>
   */
  void blst_sk_to_pk_in_g1(BlstLibrary.blst_p1 out_pk, BlstLibrary.blst_scalar SK[]);
  /**
   * Original signature : <code>void blst_sign_pk_in_g1(blst_p2*, const blst_p2*, const blst_scalar*)</code><br>
   * <i>native declaration : line 235</i><br>
   * @deprecated use the safer methods {@link #blst_sign_pk_in_g1(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], test.TestLibrary.blst_scalar[])} and {@link #blst_sign_pk_in_g1(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_sign_pk_in_g1(BlstLibrary.blst_p2 out_sig, BlstLibrary.blst_p2 hash, BlstLibrary.blst_scalar SK);
  /**
   * Original signature : <code>void blst_sign_pk_in_g1(blst_p2*, const blst_p2*, const blst_scalar*)</code><br>
   * <i>native declaration : line 235</i>
   */
  void blst_sign_pk_in_g1(BlstLibrary.blst_p2 out_sig, BlstLibrary.blst_p2 hash[], BlstLibrary.blst_scalar SK[]);
  /**
   * Original signature : <code>void blst_sk_to_pk_in_g2(blst_p2*, const blst_scalar*)</code><br>
   * <i>native declaration : line 237</i><br>
   * @deprecated use the safer methods {@link #blst_sk_to_pk_in_g2(test.TestLibrary.blst_p2, test.TestLibrary.blst_scalar[])} and {@link #blst_sk_to_pk_in_g2(test.TestLibrary.blst_p2, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_sk_to_pk_in_g2(BlstLibrary.blst_p2 out_pk, BlstLibrary.blst_scalar SK);
  /**
   * Original signature : <code>void blst_sk_to_pk_in_g2(blst_p2*, const blst_scalar*)</code><br>
   * <i>native declaration : line 237</i>
   */
  void blst_sk_to_pk_in_g2(BlstLibrary.blst_p2 out_pk, BlstLibrary.blst_scalar SK[]);
  /**
   * Original signature : <code>void blst_sign_pk_in_g2(blst_p1*, const blst_p1*, const blst_scalar*)</code><br>
   * <i>native declaration : line 238</i><br>
   * @deprecated use the safer methods {@link #blst_sign_pk_in_g2(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], test.TestLibrary.blst_scalar[])} and {@link #blst_sign_pk_in_g2(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, test.TestLibrary.blst_scalar)} instead
   */
  @Deprecated
  void blst_sign_pk_in_g2(BlstLibrary.blst_p1 out_sig, BlstLibrary.blst_p1 hash, BlstLibrary.blst_scalar SK);
  /**
   * Original signature : <code>void blst_sign_pk_in_g2(blst_p1*, const blst_p1*, const blst_scalar*)</code><br>
   * <i>native declaration : line 238</i>
   */
  void blst_sign_pk_in_g2(BlstLibrary.blst_p1 out_sig, BlstLibrary.blst_p1 hash[], BlstLibrary.blst_scalar SK[]);
  /**
   * Original signature : <code>void blst_miller_loop(blst_fp12*, const blst_p2_affine*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 245</i><br>
   * @deprecated use the safer methods {@link #blst_miller_loop(test.TestLibrary.blst_fp12, test.TestLibrary.blst_p2_affine[], test.TestLibrary.blst_p1_affine[])} and {@link #blst_miller_loop(test.TestLibrary.blst_fp12, test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_miller_loop(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_p2_affine Q, BlstLibrary.blst_p1_affine P);
  /**
   * Original signature : <code>void blst_miller_loop(blst_fp12*, const blst_p2_affine*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 245</i>
   */
  void blst_miller_loop(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_p2_affine Q[], BlstLibrary.blst_p1_affine P[]);
  /**
   * Original signature : <code>void blst_final_exp(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 247</i><br>
   * @deprecated use the safer methods {@link #blst_final_exp(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12[])} and {@link #blst_final_exp(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  void blst_final_exp(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 f);
  /**
   * Original signature : <code>void blst_final_exp(blst_fp12*, const blst_fp12*)</code><br>
   * <i>native declaration : line 247</i>
   */
  void blst_final_exp(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp12 f[]);
  /**
   * Original signature : <code>void blst_precompute_lines(blst_fp6[68], const blst_p2_affine*)</code><br>
   * <i>native declaration : line 248</i><br>
   * @deprecated use the safer methods {@link #blst_precompute_lines(test.TestLibrary.blst_fp6[], test.TestLibrary.blst_p2_affine[])} and {@link #blst_precompute_lines(com.sun.jna.Pointer, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_precompute_lines(Pointer Qlines, BlstLibrary.blst_p2_affine Q);
  /**
   * Original signature : <code>void blst_precompute_lines(blst_fp6[68], const blst_p2_affine*)</code><br>
   * <i>native declaration : line 248</i>
   */
  void blst_precompute_lines(BlstLibrary.blst_fp6 Qlines[], BlstLibrary.blst_p2_affine Q[]);
  /**
   * Original signature : <code>void blst_miller_loop_lines(blst_fp12*, const blst_fp6[68], const blst_p1_affine*)</code><br>
   * <i>native declaration : line 249</i><br>
   * @deprecated use the safer methods {@link #blst_miller_loop_lines(test.TestLibrary.blst_fp12, test.TestLibrary.blst_fp6[], test.TestLibrary.blst_p1_affine[])} and {@link #blst_miller_loop_lines(test.TestLibrary.blst_fp12, com.sun.jna.Pointer, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_miller_loop_lines(BlstLibrary.blst_fp12 ret, Pointer Qlines, BlstLibrary.blst_p1_affine P);
  /**
   * Original signature : <code>void blst_miller_loop_lines(blst_fp12*, const blst_fp6[68], const blst_p1_affine*)</code><br>
   * <i>native declaration : line 249</i>
   */
  void blst_miller_loop_lines(BlstLibrary.blst_fp12 ret, BlstLibrary.blst_fp6 Qlines[], BlstLibrary.blst_p1_affine P[]);
  /**
   * Original signature : <code>size_t blst_pairing_sizeof()</code><br>
   * <i>native declaration : line 259</i>
   */
//  NativeSize blst_pairing_sizeof();
  /**
   * Original signature : <code>void blst_pairing_init(blst_pairing*)</code><br>
   * <i>native declaration : line 260</i>
   */
  void blst_pairing_init(BlstLibrary.blst_pairing new_ctx);
  /**
   * Original signature : <code>void blst_pairing_commit(blst_pairing*)</code><br>
   * <i>native declaration : line 261</i>
   */
  void blst_pairing_commit(BlstLibrary.blst_pairing ctx);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_aggregate_pk_in_g2(blst_pairing*, const blst_p2_affine*, const blst_p1_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 262</i><br>
   * @deprecated use the safer methods {@link #blst_pairing_aggregate_pk_in_g2(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p2_affine[], test.TestLibrary.blst_p1_affine[], byte, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_pairing_aggregate_pk_in_g2(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p1_affine, byte, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_pairing_aggregate_pk_in_g2(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p2_affine PK, BlstLibrary.blst_p1_affine signature, byte hash_or_encode, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_aggregate_pk_in_g2(blst_pairing*, const blst_p2_affine*, const blst_p1_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 262</i>
   */
  BlstLibrary.BLST_ERROR blst_pairing_aggregate_pk_in_g2(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p2_affine PK[], BlstLibrary.blst_p1_affine signature[], byte hash_or_encode, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g2(blst_pairing*, const blst_p2_affine*, const blst_p1_affine*, const blst_p1_affine*, const limb_t*, size_t)</code><br>
   * <i>native declaration : line 271</i><br>
   * @deprecated use the safer methods {@link #blst_pairing_mul_n_aggregate_pk_in_g2(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p2_affine[], test.TestLibrary.blst_p1_affine[], test.TestLibrary.blst_p1_affine[], test.TestLibrary.limb_t[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_pairing_mul_n_aggregate_pk_in_g2(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p1_affine, test.TestLibrary.limb_t, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g2(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p2_affine PK, BlstLibrary.blst_p1_affine sig, BlstLibrary.blst_p1_affine hash, BlstLibrary.limb_t scalar, NativeSize nbits);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g2(blst_pairing*, const blst_p2_affine*, const blst_p1_affine*, const blst_p1_affine*, const limb_t*, size_t)</code><br>
   * <i>native declaration : line 271</i>
   */
  BlstLibrary.BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g2(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p2_affine PK[], BlstLibrary.blst_p1_affine sig[], BlstLibrary.blst_p1_affine hash[], BlstLibrary.limb_t scalar[], NativeSize nbits);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_aggregate_pk_in_g1(blst_pairing*, const blst_p1_affine*, const blst_p2_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 277</i><br>
   * @deprecated use the safer methods {@link #blst_pairing_aggregate_pk_in_g1(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p1_affine[], test.TestLibrary.blst_p2_affine[], byte, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_pairing_aggregate_pk_in_g1(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p2_affine, byte, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_pairing_aggregate_pk_in_g1(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p1_affine PK, BlstLibrary.blst_p2_affine signature, byte hash_or_encode, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_aggregate_pk_in_g1(blst_pairing*, const blst_p1_affine*, const blst_p2_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 277</i>
   */
  BlstLibrary.BLST_ERROR blst_pairing_aggregate_pk_in_g1(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p1_affine PK[], BlstLibrary.blst_p2_affine signature[], byte hash_or_encode, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g1(blst_pairing*, const blst_p1_affine*, const blst_p2_affine*, const blst_p2_affine*, const limb_t*, size_t)</code><br>
   * <i>native declaration : line 286</i><br>
   * @deprecated use the safer methods {@link #blst_pairing_mul_n_aggregate_pk_in_g1(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p1_affine[], test.TestLibrary.blst_p2_affine[], test.TestLibrary.blst_p2_affine[], test.TestLibrary.limb_t[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_pairing_mul_n_aggregate_pk_in_g1(test.TestLibrary.blst_pairing, test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p2_affine, test.TestLibrary.limb_t, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g1(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p1_affine PK, BlstLibrary.blst_p2_affine sig, BlstLibrary.blst_p2_affine hash, BlstLibrary.limb_t scalar, NativeSize nbits);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g1(blst_pairing*, const blst_p1_affine*, const blst_p2_affine*, const blst_p2_affine*, const limb_t*, size_t)</code><br>
   * <i>native declaration : line 286</i>
   */
  BlstLibrary.BLST_ERROR blst_pairing_mul_n_aggregate_pk_in_g1(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_p1_affine PK[], BlstLibrary.blst_p2_affine sig[], BlstLibrary.blst_p2_affine hash[], BlstLibrary.limb_t scalar[], NativeSize nbits);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_merge(blst_pairing*, const blst_pairing*)</code><br>
   * <i>native declaration : line 292</i><br>
   * @deprecated use the safer methods {@link #blst_pairing_merge(test.TestLibrary.blst_pairing, test.TestLibrary.blst_pairing[])} and {@link #blst_pairing_merge(test.TestLibrary.blst_pairing, test.TestLibrary.blst_pairing)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_pairing_merge(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_pairing ctx1);
  /**
   * Original signature : <code>BLST_ERROR blst_pairing_merge(blst_pairing*, const blst_pairing*)</code><br>
   * <i>native declaration : line 292</i>
   */
  BlstLibrary.BLST_ERROR blst_pairing_merge(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_pairing ctx1[]);
  /**
   * Original signature : <code>bool blst_pairing_finalverify(const blst_pairing*, const blst_fp12*)</code><br>
   * <i>native declaration : line 293</i><br>
   * @deprecated use the safer methods {@link #blst_pairing_finalverify(test.TestLibrary.blst_pairing[], test.TestLibrary.blst_fp12[])} and {@link #blst_pairing_finalverify(test.TestLibrary.blst_pairing, test.TestLibrary.blst_fp12)} instead
   */
  @Deprecated
  byte blst_pairing_finalverify(BlstLibrary.blst_pairing ctx, BlstLibrary.blst_fp12 gtsig);
  /**
   * Original signature : <code>bool blst_pairing_finalverify(const blst_pairing*, const blst_fp12*)</code><br>
   * <i>native declaration : line 293</i>
   */
  byte blst_pairing_finalverify(BlstLibrary.blst_pairing ctx[], BlstLibrary.blst_fp12 gtsig[]);
  /**
   * Customarily applications aggregate signatures separately.<br>
   * In which case application would have to pass NULLs for |signature|<br>
   * to blst_pairing_aggregate calls and pass aggregated signature<br>
   * collected with these calls to blst_pairing_finalverify. Inputs are<br>
   * Zcash-compatible "straight-from-wire" byte vectors, compressed or<br>
   * not.<br>
   * Original signature : <code>BLST_ERROR blst_aggregate_in_g1(blst_p1*, const blst_p1*, const byte*)</code><br>
   * <i>native declaration : line 305</i><br>
   * @deprecated use the safer methods {@link #blst_aggregate_in_g1(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1[], byte[])} and {@link #blst_aggregate_in_g1(test.TestLibrary.blst_p1, test.TestLibrary.blst_p1, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_aggregate_in_g1(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 in, Pointer zwire);
  /**
   * Customarily applications aggregate signatures separately.<br>
   * In which case application would have to pass NULLs for |signature|<br>
   * to blst_pairing_aggregate calls and pass aggregated signature<br>
   * collected with these calls to blst_pairing_finalverify. Inputs are<br>
   * Zcash-compatible "straight-from-wire" byte vectors, compressed or<br>
   * not.<br>
   * Original signature : <code>BLST_ERROR blst_aggregate_in_g1(blst_p1*, const blst_p1*, const byte*)</code><br>
   * <i>native declaration : line 305</i>
   */
  BlstLibrary.BLST_ERROR blst_aggregate_in_g1(BlstLibrary.blst_p1 out, BlstLibrary.blst_p1 in[], byte zwire[]);
  /**
   * Original signature : <code>BLST_ERROR blst_aggregate_in_g2(blst_p2*, const blst_p2*, const byte*)</code><br>
   * <i>native declaration : line 307</i><br>
   * @deprecated use the safer methods {@link #blst_aggregate_in_g2(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2[], byte[])} and {@link #blst_aggregate_in_g2(test.TestLibrary.blst_p2, test.TestLibrary.blst_p2, com.sun.jna.Pointer)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_aggregate_in_g2(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 in, Pointer zwire);
  /**
   * Original signature : <code>BLST_ERROR blst_aggregate_in_g2(blst_p2*, const blst_p2*, const byte*)</code><br>
   * <i>native declaration : line 307</i>
   */
  BlstLibrary.BLST_ERROR blst_aggregate_in_g2(BlstLibrary.blst_p2 out, BlstLibrary.blst_p2 in[], byte zwire[]);
  /**
   * Original signature : <code>void blst_aggregated_in_g1(blst_fp12*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 310</i><br>
   * @deprecated use the safer methods {@link #blst_aggregated_in_g1(test.TestLibrary.blst_fp12, test.TestLibrary.blst_p1_affine[])} and {@link #blst_aggregated_in_g1(test.TestLibrary.blst_fp12, test.TestLibrary.blst_p1_affine)} instead
   */
  @Deprecated
  void blst_aggregated_in_g1(BlstLibrary.blst_fp12 out, BlstLibrary.blst_p1_affine signature);
  /**
   * Original signature : <code>void blst_aggregated_in_g1(blst_fp12*, const blst_p1_affine*)</code><br>
   * <i>native declaration : line 310</i>
   */
  void blst_aggregated_in_g1(BlstLibrary.blst_fp12 out, BlstLibrary.blst_p1_affine signature[]);
  /**
   * Original signature : <code>void blst_aggregated_in_g2(blst_fp12*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 311</i><br>
   * @deprecated use the safer methods {@link #blst_aggregated_in_g2(test.TestLibrary.blst_fp12, test.TestLibrary.blst_p2_affine[])} and {@link #blst_aggregated_in_g2(test.TestLibrary.blst_fp12, test.TestLibrary.blst_p2_affine)} instead
   */
  @Deprecated
  void blst_aggregated_in_g2(BlstLibrary.blst_fp12 out, BlstLibrary.blst_p2_affine signature);
  /**
   * Original signature : <code>void blst_aggregated_in_g2(blst_fp12*, const blst_p2_affine*)</code><br>
   * <i>native declaration : line 311</i>
   */
  void blst_aggregated_in_g2(BlstLibrary.blst_fp12 out, BlstLibrary.blst_p2_affine signature[]);
  /**
   * "One-shot" CoreVerify entry points.<br>
   * Original signature : <code>BLST_ERROR blst_core_verify_pk_in_g1(const blst_p1_affine*, const blst_p2_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 316</i><br>
   * @deprecated use the safer methods {@link #blst_core_verify_pk_in_g1(test.TestLibrary.blst_p1_affine[], test.TestLibrary.blst_p2_affine[], byte, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_core_verify_pk_in_g1(test.TestLibrary.blst_p1_affine, test.TestLibrary.blst_p2_affine, byte, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_core_verify_pk_in_g1(BlstLibrary.blst_p1_affine pk, BlstLibrary.blst_p2_affine signature, byte hash_or_encode, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * "One-shot" CoreVerify entry points.<br>
   * Original signature : <code>BLST_ERROR blst_core_verify_pk_in_g1(const blst_p1_affine*, const blst_p2_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 316</i>
   */
  BlstLibrary.BLST_ERROR blst_core_verify_pk_in_g1(BlstLibrary.blst_p1_affine pk[], BlstLibrary.blst_p2_affine signature[], byte hash_or_encode, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * Original signature : <code>BLST_ERROR blst_core_verify_pk_in_g2(const blst_p2_affine*, const blst_p1_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 324</i><br>
   * @deprecated use the safer methods {@link #blst_core_verify_pk_in_g2(test.TestLibrary.blst_p2_affine[], test.TestLibrary.blst_p1_affine[], byte, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize, byte[], com.ochafik.lang.jnaerator.runtime.NativeSize)} and {@link #blst_core_verify_pk_in_g2(test.TestLibrary.blst_p2_affine, test.TestLibrary.blst_p1_affine, byte, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize, com.sun.jna.Pointer, com.ochafik.lang.jnaerator.runtime.NativeSize)} instead
   */
  @Deprecated
  BlstLibrary.BLST_ERROR blst_core_verify_pk_in_g2(BlstLibrary.blst_p2_affine pk, BlstLibrary.blst_p1_affine signature, byte hash_or_encode, Pointer msg, NativeSize msg_len, Pointer DST, NativeSize DST_len, Pointer aug, NativeSize aug_len);
  /**
   * Original signature : <code>BLST_ERROR blst_core_verify_pk_in_g2(const blst_p2_affine*, const blst_p1_affine*, bool, const byte*, size_t, const byte*, size_t, const byte*, size_t)</code><br>
   * <i>native declaration : line 324</i>
   */
  BlstLibrary.BLST_ERROR blst_core_verify_pk_in_g2(BlstLibrary.blst_p2_affine pk[], BlstLibrary.blst_p1_affine signature[], byte hash_or_encode, byte msg[], NativeSize msg_len, byte DST[], NativeSize DST_len, byte aug[], NativeSize aug_len);
  /**
   * java.lang.IllegalArgumentException: Not a simple identifier : 'com.sun.jna.Pointer'<br>
   * SKIPPED:<br>
   * <i>native declaration : line 333</i><br>
   * BLS12_381_G1
   */
  /**
   * java.lang.IllegalArgumentException: Not a simple identifier : 'com.sun.jna.Pointer'<br>
   * SKIPPED:<br>
   * <i>native declaration : line 334</i><br>
   * BLS12_381_NEG_G1
   */
  /**
   * java.lang.IllegalArgumentException: Not a simple identifier : 'com.sun.jna.Pointer'<br>
   * SKIPPED:<br>
   * <i>native declaration : line 335</i><br>
   * BLS12_381_G2
   */
  /**
   * java.lang.IllegalArgumentException: Not a simple identifier : 'com.sun.jna.Pointer'<br>
   * SKIPPED:<br>
   * <i>native declaration : line 336</i><br>
   * BLS12_381_NEG_G2
   */

  public static class limb_t extends PointerType {
    public limb_t(Pointer address) {
      super(address);
    }
    public limb_t() {
      super();
    }
  };

  private static long[] toLongs(byte[] bytes, ByteOrder byteOrder) {
    if (bytes.length % 8 != 0)
      throw new IllegalArgumentException("Wrong bytes count: " + bytes.length);
    ByteBuffer byteBuffer = ByteBuffer.wrap(bytes).order(byteOrder);
    long[] ret = new long[bytes.length / 8];
    byteBuffer.asLongBuffer().get(ret);
    return ret;
  }

  private static byte[] fromLongs(long[] longs, ByteOrder byteOrder) {
    ByteBuffer buffer = ByteBuffer.allocate(longs.length * 8).order(byteOrder);
    buffer.asLongBuffer().put(longs);
    return buffer.array();
  }

  @FieldOrder({"l0", "l1", "l2", "l3"})
  public static class Bytes32 extends Structure {

    public Bytes32() {
    }

    public Bytes32(byte[] bytes) {
      long[] longs = toLongs(bytes, BYTE_ORDER);
      if (longs.length != 4) throw new IllegalArgumentException("32 bytes expected");
      l0 = longs[0];
      l1 = longs[1];
      l2 = longs[2];
      l3 = longs[3];
    }

    public byte[] toBytes() {
      return fromLongs(new long[] {l0, l1, l2, l3}, BYTE_ORDER);
    }

    public long l0;
    public long l1;
    public long l2;
    public long l3;
  }

  @FieldOrder({"l0", "l1", "l2", "l3", "l4", "l5"})
  public static class Bytes48 extends Structure {

    public Bytes48() {
    }

    public Bytes48(byte[] bytes) {
      long[] longs = toLongs(bytes, BYTE_ORDER);
      if (longs.length != 6) throw new IllegalArgumentException("48 bytes expected");
      l0 = longs[0];
      l1 = longs[1];
      l2 = longs[2];
      l3 = longs[3];
      l4 = longs[4];
      l5 = longs[5];
    }

    public byte[] toBytes() {
      return fromLongs(new long[] {l0, l1, l2, l3, l4, l5}, BYTE_ORDER);
    }

    public long l0;
    public long l1;
    public long l2;
    public long l3;
    public long l4;
    public long l5;
  }

  public static class blst_scalar extends Bytes32 {
    public blst_scalar() {
    }

    public blst_scalar(byte[] bytes) {
      super(bytes);
    }
  }
  public static class blst_fr extends Bytes32 {
    public blst_fr() {
    }

    public blst_fr(byte[] bytes) {
      super(bytes);
    }
  };
  public static class blst_fp extends Bytes48 {
    public blst_fp() {
    }

    public blst_fp(byte[] bytes) {
      super(bytes);
    }
  }

  @FieldOrder({"fp_0", "fp_1"})
  public static class blst_fp2 extends Structure {
    public blst_fp2(blst_fp fp_0, blst_fp fp_1) {
      this.fp_0 = fp_0;
      this.fp_1 = fp_1;
    }

    public blst_fp2() {
      fp_0 = new blst_fp();
      fp_1 = new blst_fp();
    }

    public blst_fp fp_0;
    public blst_fp fp_1;
  };

  @FieldOrder({"fp2_0", "fp2_1", "fp2_2"})
  public static class blst_fp6 extends Structure {
    public blst_fp6(blst_fp2 fp2_0, blst_fp2 fp2_1,
        blst_fp2 fp2_2) {
      this.fp2_0 = fp2_0;
      this.fp2_1 = fp2_1;
      this.fp2_2 = fp2_2;
    }

    public blst_fp6() {
      this.fp2_0 = new blst_fp2();
      this.fp2_1 = new blst_fp2();
      this.fp2_2 = new blst_fp2();
    }

    public blst_fp2 fp2_0;
    public blst_fp2 fp2_1;
    public blst_fp2 fp2_2;
  };

  @FieldOrder({"fp6_0", "fp6_1"})
  public static class blst_fp12 extends Structure {

    public blst_fp12(blst_fp6 fp6_0, blst_fp6 fp6_1) {
      this.fp6_0 = fp6_0;
      this.fp6_1 = fp6_1;
    }

    public blst_fp12() {
      this.fp6_0 = new blst_fp6();
      this.fp6_1 = new blst_fp6();
    }

    public blst_fp6 fp6_0;
    public blst_fp6 fp6_1;
  };

  //  typedef struct { blst_fp x, y, z; } blst_p1;
  //  typedef struct { blst_fp x, y; } blst_p1_affine;


  @FieldOrder({"x", "y", "z"})
  public static class blst_p1 extends Structure {

    public blst_p1(blst_fp x, blst_fp y, blst_fp z) {
      this.x = x;
      this.y = y;
      this.z = z;
    }

    public blst_p1() {
      this.x = new blst_fp();
      this.y = new blst_fp();
      this.z = new blst_fp();
    }

    public blst_fp x;
    public blst_fp y;
    public blst_fp z;
  };

  @FieldOrder({"x", "y"})
  public static class blst_p1_affine extends Structure {

    public blst_p1_affine(blst_fp x, blst_fp y) {
      this.x = x;
      this.y = y;
    }

    public blst_fp x;
    public blst_fp y;
  };

  //  typedef struct { blst_fp2 x, y, z; } blst_p2;
  //  typedef struct { blst_fp2 x, y; } blst_p2_affine;

  @FieldOrder({"x", "y", "z"})
  public static class blst_p2 extends Structure {

    public blst_p2(blst_fp2 x, blst_fp2 y, blst_fp2 z) {
      this.x = x;
      this.y = y;
      this.z = z;
    }

    public blst_p2() {
      this.x = new blst_fp2();
      this.y = new blst_fp2();
      this.z = new blst_fp2();
    }

    public blst_fp2 x;
    public blst_fp2 y;
    public blst_fp2 z;
  };

  @FieldOrder({"x", "y"})
  public static class blst_p2_affine extends Structure {

    public blst_p2_affine(blst_fp2 x, blst_fp2 y) {
      this.x = x;
      this.y = y;
    }

    public blst_p2_affine() {
      this.x = new blst_fp2();
      this.y = new blst_fp2();
    }

    public blst_fp2 x;
    public blst_fp2 y;
  };

  public static class BLST_ERROR extends PointerType {
    public BLST_ERROR(Pointer address) {
      super(address);
    }
    public BLST_ERROR() {
      super();
    }
  };

  public static class blst_pairing extends PointerType {
    public blst_pairing(Pointer address) {
      super(address);
    }
    public blst_pairing() {
      super();
    }
  };
}
